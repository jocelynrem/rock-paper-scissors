{"ast":null,"code":"var _jsxFileName = \"/Users/jremington/Desktop/rock-paper-scissors/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Title } from './components/Title';\nimport { Round } from './components/Round';\nimport { Playground } from './components/Playground';\nimport { Profile } from './components/Profile';\nimport { User } from './components/User';\nimport { Choice } from './components/Choice';\nimport { Computer } from './components/Computer';\nimport { Score } from './components/Score';\nimport { Message } from './components/Message';\nimport { Reset } from './components/Reset';\nimport { settings } from './assets/configs/game';\nimport rock from './assets/rock.png';\nimport paper from './assets/paper.png';\nimport scissors from './assets/scissors.png';\nimport trophy from './assets/trophy.png';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  let [game, setGame] = useState({\n    userSelection: '',\n    pcSelection: '',\n    round: 0,\n    pcScore: 0,\n    message: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Round, { ...game\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Playground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Profile, {\n      children: [/*#__PURE__*/_jsxDEV(User, { ...game,\n        trophyIcon: trophy,\n        children: [/*#__PURE__*/_jsxDEV(Choice, { ...game,\n          value: \"Rock\",\n          onClick: play,\n          choiceIcon: rock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Choice, { ...game,\n          value: \"Paper\",\n          onClick: play,\n          choiceIcon: paper\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Choice, { ...game,\n          value: \"Scissors\",\n          onClick: play,\n          choiceIcon: scissors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Score, {\n        score: userScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Profile, {\n      children: [/*#__PURE__*/_jsxDEV(Message, { ...game,\n        rockIcon: rock,\n        paperIcon: paper,\n        scissorsIcon: scissors,\n        trophyIcon: trophy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Score, {\n        score: pcScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lo1Vt6KZWuJeZ1nOABvYDzzBRi0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jremington/Desktop/rock-paper-scissors/src/App.js"],"names":["React","useState","Title","Round","Playground","Profile","User","Choice","Computer","Score","Message","Reset","settings","rock","paper","scissors","trophy","App","game","setGame","userSelection","pcSelection","round","pcScore","message","play","userScore"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,aAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC;AAC7BmB,IAAAA,aAAa,EAAE,EADc;AAE7BC,IAAAA,WAAW,EAAE,EAFgB;AAG7BC,IAAAA,KAAK,EAAE,CAHsB;AAI7BC,IAAAA,OAAO,EAAE,CAJoB;AAK7BC,IAAAA,OAAO,EAAE;AALoB,GAAD,CAA9B;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD,OAAWN;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,OAAD;AAAA,8BACE,QAAC,IAAD,OAAUA,IAAV;AAAgB,QAAA,UAAU,EAAEF,MAA5B;AAAA,gCACE,QAAC,MAAD,OAAYE,IAAZ;AAAkB,UAAA,KAAK,EAAC,MAAxB;AAA+B,UAAA,OAAO,EAAEO,IAAxC;AAA8C,UAAA,UAAU,EAAEZ;AAA1D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD,OAAYK,IAAZ;AAAkB,UAAA,KAAK,EAAC,OAAxB;AAAgC,UAAA,OAAO,EAAEO,IAAzC;AAA+C,UAAA,UAAU,EAAEX;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,MAAD,OAAYI,IAAZ;AAAkB,UAAA,KAAK,EAAC,UAAxB;AAAmC,UAAA,OAAO,EAAEO,IAA5C;AAAkD,UAAA,UAAU,EAAEV;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEW;AAAd;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAYE,QAAC,OAAD;AAAA,8BACE,QAAC,OAAD,OAAaR,IAAb;AACE,QAAA,QAAQ,EAAEL,IADZ;AAEE,QAAA,SAAS,EAAEC,KAFb;AAGE,QAAA,YAAY,EAAEC,QAHhB;AAIE,QAAA,UAAU,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEO;AAAd;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAhCuBN,G;;KAAAA,G","sourcesContent":["import React, { useState } from 'react'\nimport { Title } from './components/Title'\nimport { Round } from './components/Round'\nimport { Playground } from './components/Playground'\nimport { Profile } from './components/Profile'\nimport { User } from './components/User'\nimport { Choice } from './components/Choice'\nimport { Computer } from './components/Computer'\nimport { Score } from './components/Score'\nimport { Message } from './components/Message'\nimport { Reset } from './components/Reset'\n\nimport { settings } from './assets/configs/game'\n\nimport rock from './assets/rock.png'\nimport paper from './assets/paper.png'\nimport scissors from './assets/scissors.png'\nimport trophy from './assets/trophy.png'\n\nimport './style.css'\n\nexport default function App() {\n  let [game, setGame] = useState({\n    userSelection: '',\n    pcSelection: '',\n    round: 0,\n    pcScore: 0,\n    message: '',\n  })\n  return (\n    <div className='App'>\n      <Title />\n      <Round {...game} />\n      <Playground />\n      <Profile>\n        <User {...game} trophyIcon={trophy}>\n          <Choice {...game} value='Rock' onClick={play} choiceIcon={rock} />\n          <Choice {...game} value='Paper' onClick={play} choiceIcon={paper} />\n          <Choice {...game} value='Scissors' onClick={play} choiceIcon={scissors} />\n        </User>\n        <Score score={userScore} />\n      </Profile>\n      <Profile>\n        <Message {...game}\n          rockIcon={rock}\n          paperIcon={paper}\n          scissorsIcon={scissors}\n          trophyIcon={trophy}\n        />\n        <Score score={pcScore} />\n      </Profile>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}